import os

DEBUG = False

# Create base environment
baseEnv = Environment()

baseEnv.Append(CCFLAGS = ['-std=c++11', '-fPIC']);

#qtver = ['qt4', 'QT4DIR', '/home/frank/QtSDK/Desktop/Qt/474/gcc']
qtver = ['qt5', 'QT5DIR', '/home/frank/Qt5.0.2/5.0.2/gcc_64']

# DIST SCTRUCTURE
if DEBUG:
    baseEnv['BUILDKIND'] = 'debug'
else:
    baseEnv['BUILDKIND'] = 'opt'
distPath = '#/inst/%s/%s' % (baseEnv['PLATFORM'], baseEnv['BUILDKIND'])
baseEnv['DISTPATH'] = distPath

#...further customization of base env
toolsBase = '/home/frank/tbb41_20130116oss'
baseEnv.Append(CPPPATH = ['%s/include' % toolsBase])
baseEnv.Append(LIBPATH = ['%s/lib/intel64/cc4.1.0_libc2.4_kernel2.6.16.21' % toolsBase])
baseEnv.Append(LIBS= ['tbb', 'GLEW', 'GL'])

# Add GFA and FAARAY
baseEnv.Append(CPPPATH = ['/home/%s/trees/work/gfa/inst/posix/%s/include' % (os.environ['USER'],baseEnv['BUILDKIND']) ])
baseEnv.Append(LIBPATH = ['/home/%s/trees/work/gfa/inst/posix/%s/lib' % (os.environ['USER'],baseEnv['BUILDKIND']) ])
baseEnv.Append(CPPPATH = ['/home/%s/trees/work/faaray/inst/posix/%s/include' % (os.environ['USER'],baseEnv['BUILDKIND']) ])
baseEnv.Append(LIBPATH = ['/home/%s/trees/work/faaray/inst/posix/%s/lib' % (os.environ['USER'],baseEnv['BUILDKIND']) ])
baseEnv.Append(LIBS = ['gfa', 'faaray'])

# Clone Qt environment
qtEnv = baseEnv.Clone()

# Set QT#DIR and PKG_CONFIG_PATH
qtEnv['ENV']['PKG_CONFIG_PATH'] = os.path.join(qtver[2], 'lib/pkgconfig')
qtEnv[qtver[1]] = qtver[2]

# Add qt tool
qtEnv.Tool(qtver[0])

#...further customization of qt env

# Export environments
Export('baseEnv qtEnv')

# Your other stuff...

# ...including the call to your SConscripts
SConscript('SConscript')

